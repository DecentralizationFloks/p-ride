{
  "address": "0xdf4b4E836f1Fe0BAd13890633ee3CeB9a292390D",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            }
          ],
          "internalType": "struct Driver.DRIVER",
          "name": "_driver",
          "type": "tuple"
        }
      ],
      "name": "createDriver",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5a7a49fdfd38ab7fc4882e70a654ef5e8004c3195f315ffbe43ef6bc5db74146",
  "receipt": {
    "to": null,
    "from": "0xd3e7727875A574C8C8fb23a0664633ceE86B54a5",
    "contractAddress": "0xdf4b4E836f1Fe0BAd13890633ee3CeB9a292390D",
    "transactionIndex": 10,
    "gasUsed": "596269",
    "logsBloom": "0x
    "blockHash": "0x5722326d62d05778323227251d02195c730e1cfb94308db4b924f735461fc3f3",
    "transactionHash": "0x5a7a49fdfd38ab7fc4882e70a654ef5e8004c3195f315ffbe43ef6bc5db74146",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 11783194,
        "transactionHash": "0x5a7a49fdfd38ab7fc4882e70a654ef5e8004c3195f315ffbe43ef6bc5db74146",
        "address": "0xdf4b4E836f1Fe0BAd13890633ee3CeB9a292390D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d3e7727875a574c8c8fb23a0664633cee86b54a5"
        ],
        "data": "0x",
        "logIndex": 17,
        "blockHash": "0x5722326d62d05778323227251d02195c730e1cfb94308db4b924f735461fc3f3"
      }
    ],
    "blockNumber": 11783194,
    "cumulativeGasUsed": "1184807",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "88aabfd0e3589ea3088a390791e8966e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walletAddr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"internalType\":\"struct Driver.DRIVER\",\"name\":\"_driver\",\"type\":\"tuple\"}],\"name\":\"createDriver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Driver.sol\":\"Driver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/Driver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Driver is Ownable {\\n    uint256 private driversCount = 0;\\n    address internal driverWalletAddr;\\n\\n    struct DRIVER {\\n        string name;\\n        uint age;\\n    }\\n\\n    mapping(address => DRIVER) private drivers;\\n\\n    function createDriver(address _walletAddr, DRIVER memory _driver)\\n    public\\n    onlyOwner\\n    returns (uint256)\\n    {\\n        DRIVER memory driver;\\n        driver = _driver;\\n\\n        drivers[_walletAddr] = driver;\\n\\n        return driversCount;\\n    }\\n}\\n\",\"keccak256\":\"0x0c6fd39f7546e42073769bc5815ba4395756f4614d263d0d2396974489a4e029\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610954806101126000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063455bc06114610051578063715018a6146100815780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b61006b60048036038101906100669190610615565b6100c5565b6040516100789190610788565b60405180910390f35b6100896101c4565b005b61009361024c565b6040516100a0919061072d565b60405180910390f35b6100c360048036038101906100be91906105ec565b610275565b005b60006100cf61036d565b73ffffffffffffffffffffffffffffffffffffffff166100ed61024c565b73ffffffffffffffffffffffffffffffffffffffff1614610143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013a90610768565b60405180910390fd5b61014b610439565b82905080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906101aa929190610453565b506020820151816001015590505060015491505092915050565b6101cc61036d565b73ffffffffffffffffffffffffffffffffffffffff166101ea61024c565b73ffffffffffffffffffffffffffffffffffffffff1614610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023790610768565b60405180910390fd5b61024a6000610375565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61027d61036d565b73ffffffffffffffffffffffffffffffffffffffff1661029b61024c565b73ffffffffffffffffffffffffffffffffffffffff16146102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610768565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035890610748565b60405180910390fd5b61036a81610375565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806040016040528060608152602001600081525090565b82805461045f90610860565b90600052602060002090601f01602090048101928261048157600085556104c8565b82601f1061049a57805160ff19168380011785556104c8565b828001600101855582156104c8579182015b828111156104c75782518255916020019190600101906104ac565b5b5090506104d591906104d9565b5090565b5b808211156104f25760008160009055506001016104da565b5090565b6000610509610504846107d4565b6107a3565b90508281526020810184848401111561052157600080fd5b61052c848285610851565b509392505050565b600081359050610543816108f0565b92915050565b600082601f83011261055a57600080fd5b813561056a8482602086016104f6565b91505092915050565b60006040828403121561058557600080fd5b61058f60406107a3565b9050600082013567ffffffffffffffff8111156105ab57600080fd5b6105b784828501610549565b60008301525060206105cb848285016105d7565b60208301525092915050565b6000813590506105e681610907565b92915050565b6000602082840312156105fe57600080fd5b600061060c84828501610534565b91505092915050565b6000806040838503121561062857600080fd5b600061063685828601610534565b925050602083013567ffffffffffffffff81111561065357600080fd5b61065f85828601610573565b9150509250929050565b61067281610815565b82525050565b6000610685602683610804565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106eb602083610804565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61072781610847565b82525050565b60006020820190506107426000830184610669565b92915050565b6000602082019050818103600083015261076181610678565b9050919050565b60006020820190508181036000830152610781816106de565b9050919050565b600060208201905061079d600083018461071e565b92915050565b6000604051905081810181811067ffffffffffffffff821117156107ca576107c96108c1565b5b8060405250919050565b600067ffffffffffffffff8211156107ef576107ee6108c1565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b600061082082610827565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000600282049050600182168061087857607f821691505b6020821081141561088c5761088b610892565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108f981610815565b811461090457600080fd5b50565b61091081610847565b811461091b57600080fd5b5056fea2646970667358221220b371e1716b4d797f7a2485ea7be5d520f7bc954ac8578049438936d145dfed0164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063455bc06114610051578063715018a6146100815780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b61006b60048036038101906100669190610615565b6100c5565b6040516100789190610788565b60405180910390f35b6100896101c4565b005b61009361024c565b6040516100a0919061072d565b60405180910390f35b6100c360048036038101906100be91906105ec565b610275565b005b60006100cf61036d565b73ffffffffffffffffffffffffffffffffffffffff166100ed61024c565b73ffffffffffffffffffffffffffffffffffffffff1614610143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013a90610768565b60405180910390fd5b61014b610439565b82905080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906101aa929190610453565b506020820151816001015590505060015491505092915050565b6101cc61036d565b73ffffffffffffffffffffffffffffffffffffffff166101ea61024c565b73ffffffffffffffffffffffffffffffffffffffff1614610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023790610768565b60405180910390fd5b61024a6000610375565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61027d61036d565b73ffffffffffffffffffffffffffffffffffffffff1661029b61024c565b73ffffffffffffffffffffffffffffffffffffffff16146102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610768565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035890610748565b60405180910390fd5b61036a81610375565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806040016040528060608152602001600081525090565b82805461045f90610860565b90600052602060002090601f01602090048101928261048157600085556104c8565b82601f1061049a57805160ff19168380011785556104c8565b828001600101855582156104c8579182015b828111156104c75782518255916020019190600101906104ac565b5b5090506104d591906104d9565b5090565b5b808211156104f25760008160009055506001016104da565b5090565b6000610509610504846107d4565b6107a3565b90508281526020810184848401111561052157600080fd5b61052c848285610851565b509392505050565b600081359050610543816108f0565b92915050565b600082601f83011261055a57600080fd5b813561056a8482602086016104f6565b91505092915050565b60006040828403121561058557600080fd5b61058f60406107a3565b9050600082013567ffffffffffffffff8111156105ab57600080fd5b6105b784828501610549565b60008301525060206105cb848285016105d7565b60208301525092915050565b6000813590506105e681610907565b92915050565b6000602082840312156105fe57600080fd5b600061060c84828501610534565b91505092915050565b6000806040838503121561062857600080fd5b600061063685828601610534565b925050602083013567ffffffffffffffff81111561065357600080fd5b61065f85828601610573565b9150509250929050565b61067281610815565b82525050565b6000610685602683610804565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106eb602083610804565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61072781610847565b82525050565b60006020820190506107426000830184610669565b92915050565b6000602082019050818103600083015261076181610678565b9050919050565b60006020820190508181036000830152610781816106de565b9050919050565b600060208201905061079d600083018461071e565b92915050565b6000604051905081810181811067ffffffffffffffff821117156107ca576107c96108c1565b5b8060405250919050565b600067ffffffffffffffff8211156107ef576107ee6108c1565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b600061082082610827565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000600282049050600182168061087857607f821691505b6020821081141561088c5761088b610892565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108f981610815565b811461090457600080fd5b50565b61091081610847565b811461091b57600080fd5b5056fea2646970667358221220b371e1716b4d797f7a2485ea7be5d520f7bc954ac8578049438936d145dfed0164736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/Driver.sol:Driver",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 134,
        "contract": "src/Driver.sol:Driver",
        "label": "driversCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 136,
        "contract": "src/Driver.sol:Driver",
        "label": "driverWalletAddr",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 146,
        "contract": "src/Driver.sol:Driver",
        "label": "drivers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(DRIVER)141_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(DRIVER)141_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Driver.DRIVER)",
        "numberOfBytes": "32",
        "value": "t_struct(DRIVER)141_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DRIVER)141_storage": {
        "encoding": "inplace",
        "label": "struct Driver.DRIVER",
        "members": [
          {
            "astId": 138,
            "contract": "src/Driver.sol:Driver",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 140,
            "contract": "src/Driver.sol:Driver",
            "label": "age",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}