/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vehicle, VehicleInterface } from "../Vehicle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "vehicleDocumentsUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "vehicle_no",
        type: "string",
      },
      {
        internalType: "enum Vehicle.VEHICLE_TYPE",
        name: "vehicleType",
        type: "uint8",
      },
    ],
    name: "addVehicle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getVehicle",
    outputs: [
      {
        components: [
          {
            internalType: "enum Vehicle.VEHICLE_TYPE",
            name: "vehicleType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "vehicleDocumentsUrl",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehicle_no",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct Vehicle.VEHICLE_INFO",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6110a18061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806363a21ee21461005c578063715018a6146100785780638da5cb5b14610082578063a93ab101146100a0578063f2fde38b146100d0575b600080fd5b61007660048036038101906100719190610bb3565b6100ec565b005b610080610407565b005b61008a61048f565b6040516100979190610dbc565b60405180910390f35b6100ba60048036038101906100b59190610b8a565b6104b8565b6040516100c79190610e17565b60405180910390f35b6100ea60048036038101906100e59190610b8a565b61078e565b005b6100f4610886565b73ffffffffffffffffffffffffffffffffffffffff1661011261048f565b73ffffffffffffffffffffffffffffffffffffffff1614610168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015f90610df7565b60405180910390fd5b60405180608001604052808260038111156101ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018481526020018381526020018573ffffffffffffffffffffffffffffffffffffffff16815250600260008201518160000160006101000a81548160ff0219169083600381111561022a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550602082015181600101908051906020019061024b929190610952565b506040820151816002019080519060200190610268929190610952565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506002600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900460ff168160000160006101000a81548160ff02191690836003811115610352577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600182018160010190805461036b90610f60565b6103769291906109d8565b50600282018160020190805461038b90610f60565b6103969291906109d8565b506003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b61040f610886565b73ffffffffffffffffffffffffffffffffffffffff1661042d61048f565b73ffffffffffffffffffffffffffffffffffffffff1614610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90610df7565b60405180910390fd5b61048d600061088e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104c0610a65565b6104c8610886565b73ffffffffffffffffffffffffffffffffffffffff166104e661048f565b73ffffffffffffffffffffffffffffffffffffffff161461053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390610df7565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff1660038111156105d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811115610609577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201805461061d90610f60565b80601f016020809104026020016040519081016040528092919081815260200182805461064990610f60565b80156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b505050505081526020016002820180546106af90610f60565b80601f01602080910402602001604051908101604052809291908181526020018280546106db90610f60565b80156107285780601f106106fd57610100808354040283529160200191610728565b820191906000526020600020905b81548152906001019060200180831161070b57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b610796610886565b73ffffffffffffffffffffffffffffffffffffffff166107b461048f565b73ffffffffffffffffffffffffffffffffffffffff161461080a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080190610df7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561087a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087190610dd7565b60405180910390fd5b6108838161088e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461095e90610f60565b90600052602060002090601f01602090048101928261098057600085556109c7565b82601f1061099957805160ff19168380011785556109c7565b828001600101855582156109c7579182015b828111156109c65782518255916020019190600101906109ab565b5b5090506109d49190610adb565b5090565b8280546109e490610f60565b90600052602060002090601f016020900481019282610a065760008555610a54565b82601f10610a175780548555610a54565b82800160010185558215610a5457600052602060002091601f016020900482015b82811115610a53578254825591600101919060010190610a38565b5b509050610a619190610adb565b5090565b604051806080016040528060006003811115610aaa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610af4576000816000905550600101610adc565b5090565b6000610b0b610b0684610e6a565b610e39565b905082815260208101848484011115610b2357600080fd5b610b2e848285610f1e565b509392505050565b600081359050610b4581611044565b92915050565b600081359050610b5a8161105b565b92915050565b600082601f830112610b7157600080fd5b8135610b81848260208601610af8565b91505092915050565b600060208284031215610b9c57600080fd5b6000610baa84828501610b36565b91505092915050565b60008060008060808587031215610bc957600080fd5b6000610bd787828801610b36565b945050602085013567ffffffffffffffff811115610bf457600080fd5b610c0087828801610b60565b935050604085013567ffffffffffffffff811115610c1d57600080fd5b610c2987828801610b60565b9250506060610c3a87828801610b4b565b91505092959194509250565b610c4f81610ec7565b82525050565b610c5e81610ec7565b82525050565b610c6d81610f0c565b82525050565b6000610c7e82610e9a565b610c888185610ea5565b9350610c98818560208601610f2d565b610ca18161101f565b840191505092915050565b6000610cb9602683610eb6565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d1f602083610eb6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000608083016000830151610d6a6000860182610c64565b5060208301518482036020860152610d828282610c73565b91505060408301518482036040860152610d9c8282610c73565b9150506060830151610db16060860182610c46565b508091505092915050565b6000602082019050610dd16000830184610c55565b92915050565b60006020820190508181036000830152610df081610cac565b9050919050565b60006020820190508181036000830152610e1081610d12565b9050919050565b60006020820190508181036000830152610e318184610d52565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610e6057610e5f610ff0565b5b8060405250919050565b600067ffffffffffffffff821115610e8557610e84610ff0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ed282610eec565b9050919050565b6000819050610ee782611030565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1782610ed9565b9050919050565b82818337600083830152505050565b60005b83811015610f4b578082015181840152602081019050610f30565b83811115610f5a576000848401525b50505050565b60006002820490506001821680610f7857607f821691505b60208210811415610f8c57610f8b610fc1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6004811061104157611040610f92565b5b50565b61104d81610ec7565b811461105857600080fd5b50565b6004811061106857600080fd5b5056fea2646970667358221220d05b0815ca499af17e926282bc981d9a542cb7d57c19f80cff864256ed4ea49a64736f6c63430008000033";

type VehicleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VehicleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vehicle__factory extends ContractFactory {
  constructor(...args: VehicleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vehicle> {
    return super.deploy(overrides || {}) as Promise<Vehicle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Vehicle {
    return super.attach(address) as Vehicle;
  }
  connect(signer: Signer): Vehicle__factory {
    return super.connect(signer) as Vehicle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VehicleInterface {
    return new utils.Interface(_abi) as VehicleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vehicle {
    return new Contract(address, _abi, signerOrProvider) as Vehicle;
  }
}
