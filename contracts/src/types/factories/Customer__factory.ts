/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Customer, CustomerInterface } from "../Customer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_walletAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "fullname",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "dob",
            type: "string",
          },
          {
            internalType: "string",
            name: "govtID",
            type: "string",
          },
          {
            internalType: "string",
            name: "picture",
            type: "string",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        internalType: "struct Customer.USERS",
        name: "_customer",
        type: "tuple",
      },
    ],
    name: "createCustomer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_walletAddr",
        type: "address",
      },
    ],
    name: "getCustomer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "fullname",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "dob",
            type: "string",
          },
          {
            internalType: "string",
            name: "govtID",
            type: "string",
          },
          {
            internalType: "string",
            name: "picture",
            type: "string",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        internalType: "struct Customer.USERS",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61103a8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b1461006657806392818e7c14610084578063cb949e51146100b4578063f2fde38b146100e4575b600080fd5b610064610100565b005b61006e610188565b60405161007b9190610dcd565b60405180910390f35b61009e60048036038101906100999190610bd7565b6101b1565b6040516100ab9190610dcd565b60405180910390f35b6100ce60048036038101906100c99190610bae565b61035f565b6040516100db9190610e28565b60405180910390f35b6100fe60048036038101906100f99190610bae565b61076a565b005b610108610862565b73ffffffffffffffffffffffffffffffffffffffff16610126610188565b73ffffffffffffffffffffffffffffffffffffffff161461017c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017390610e08565b60405180910390fd5b610186600061086a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006101bb610862565b73ffffffffffffffffffffffffffffffffffffffff166101d9610188565b73ffffffffffffffffffffffffffffffffffffffff161461022f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610e08565b60405180910390fd5b61023761092e565b82905080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061029692919061097a565b5060208201518160010190805190602001906102b392919061097a565b5060408201518160020190805190602001906102d092919061097a565b5060608201518160030190805190602001906102ed92919061097a565b50608082015181600401908051906020019061030a92919061097a565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508391505092915050565b61036761092e565b61036f610862565b73ffffffffffffffffffffffffffffffffffffffff1661038d610188565b73ffffffffffffffffffffffffffffffffffffffff16146103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103da90610e08565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052908160008201805461043f90610f4c565b80601f016020809104026020016040519081016040528092919081815260200182805461046b90610f4c565b80156104b85780601f1061048d576101008083540402835291602001916104b8565b820191906000526020600020905b81548152906001019060200180831161049b57829003601f168201915b505050505081526020016001820180546104d190610f4c565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90610f4c565b801561054a5780601f1061051f5761010080835404028352916020019161054a565b820191906000526020600020905b81548152906001019060200180831161052d57829003601f168201915b5050505050815260200160028201805461056390610f4c565b80601f016020809104026020016040519081016040528092919081815260200182805461058f90610f4c565b80156105dc5780601f106105b1576101008083540402835291602001916105dc565b820191906000526020600020905b8154815290600101906020018083116105bf57829003601f168201915b505050505081526020016003820180546105f590610f4c565b80601f016020809104026020016040519081016040528092919081815260200182805461062190610f4c565b801561066e5780601f106106435761010080835404028352916020019161066e565b820191906000526020600020905b81548152906001019060200180831161065157829003601f168201915b5050505050815260200160048201805461068790610f4c565b80601f01602080910402602001604051908101604052809291908181526020018280546106b390610f4c565b80156107005780601f106106d557610100808354040283529160200191610700565b820191906000526020600020905b8154815290600101906020018083116106e357829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080915050919050565b610772610862565b73ffffffffffffffffffffffffffffffffffffffff16610790610188565b73ffffffffffffffffffffffffffffffffffffffff16146107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd90610e08565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90610de8565b60405180910390fd5b61085f8161086a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82805461098690610f4c565b90600052602060002090601f0160209004810192826109a857600085556109ef565b82601f106109c157805160ff19168380011785556109ef565b828001600101855582156109ef579182015b828111156109ee5782518255916020019190600101906109d3565b5b5090506109fc9190610a00565b5090565b5b80821115610a19576000816000905550600101610a01565b5090565b6000610a30610a2b84610e7b565b610e4a565b905082815260208101848484011115610a4857600080fd5b610a53848285610f0a565b509392505050565b600081359050610a6a81610fed565b92915050565b600082601f830112610a8157600080fd5b8135610a91848260208601610a1d565b91505092915050565b600060c08284031215610aac57600080fd5b610ab660c0610e4a565b9050600082013567ffffffffffffffff811115610ad257600080fd5b610ade84828501610a70565b600083015250602082013567ffffffffffffffff811115610afe57600080fd5b610b0a84828501610a70565b602083015250604082013567ffffffffffffffff811115610b2a57600080fd5b610b3684828501610a70565b604083015250606082013567ffffffffffffffff811115610b5657600080fd5b610b6284828501610a70565b606083015250608082013567ffffffffffffffff811115610b8257600080fd5b610b8e84828501610a70565b60808301525060a0610ba284828501610a5b565b60a08301525092915050565b600060208284031215610bc057600080fd5b6000610bce84828501610a5b565b91505092915050565b60008060408385031215610bea57600080fd5b6000610bf885828601610a5b565b925050602083013567ffffffffffffffff811115610c1557600080fd5b610c2185828601610a9a565b9150509250929050565b610c3481610ed8565b82525050565b610c4381610ed8565b82525050565b6000610c5482610eab565b610c5e8185610eb6565b9350610c6e818560208601610f19565b610c7781610fdc565b840191505092915050565b6000610c8f602683610ec7565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cf5602083610ec7565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600060c0830160008301518482036000860152610d458282610c49565b91505060208301518482036020860152610d5f8282610c49565b91505060408301518482036040860152610d798282610c49565b91505060608301518482036060860152610d938282610c49565b91505060808301518482036080860152610dad8282610c49565b91505060a0830151610dc260a0860182610c2b565b508091505092915050565b6000602082019050610de26000830184610c3a565b92915050565b60006020820190508181036000830152610e0181610c82565b9050919050565b60006020820190508181036000830152610e2181610ce8565b9050919050565b60006020820190508181036000830152610e428184610d28565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610e7157610e70610fad565b5b8060405250919050565b600067ffffffffffffffff821115610e9657610e95610fad565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ee382610eea565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610f37578082015181840152602081019050610f1c565b83811115610f46576000848401525b50505050565b60006002820490506001821680610f6457607f821691505b60208210811415610f7857610f77610f7e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610ff681610ed8565b811461100157600080fd5b5056fea2646970667358221220ac398690f22f02a2a82f495e0e0b64a8dcd400471192952626bab594f1577f7464736f6c63430008000033";

type CustomerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Customer__factory extends ContractFactory {
  constructor(...args: CustomerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Customer> {
    return super.deploy(overrides || {}) as Promise<Customer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Customer {
    return super.attach(address) as Customer;
  }
  connect(signer: Signer): Customer__factory {
    return super.connect(signer) as Customer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomerInterface {
    return new utils.Interface(_abi) as CustomerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Customer {
    return new Contract(address, _abi, signerOrProvider) as Customer;
  }
}
