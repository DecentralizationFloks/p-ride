/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ride, RideInterface } from "../Ride";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "driver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "vehicle_no",
            type: "string",
          },
          {
            internalType: "string",
            name: "RC",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehicleImages",
            type: "string",
          },
          {
            internalType: "enum Vehicle.VEHICLE_TYPE",
            name: "vehicleType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
        ],
        internalType: "struct Vehicle.VEHICLE_INFO",
        name: "_vehicle",
        type: "tuple",
      },
    ],
    name: "addVehicle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "string",
            name: "pickup",
            type: "string",
          },
          {
            internalType: "string",
            name: "destination",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "vehicle_no",
                type: "string",
              },
              {
                internalType: "string",
                name: "RC",
                type: "string",
              },
              {
                internalType: "string",
                name: "vehicleImages",
                type: "string",
              },
              {
                internalType: "enum Vehicle.VEHICLE_TYPE",
                name: "vehicleType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "driver",
                type: "address",
              },
            ],
            internalType: "struct Vehicle.VEHICLE_INFO",
            name: "vehicle",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "timestamp",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "noOfPassengers",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isComplete",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isConfirmed",
            type: "bool",
          },
          {
            internalType: "enum Ride.appUser",
            name: "wasCancelledBy",
            type: "uint8",
          },
        ],
        internalType: "struct Ride.RIDE",
        name: "_rideDetails",
        type: "tuple",
      },
    ],
    name: "confirmRide",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "rideIds",
        type: "uint256[]",
      },
    ],
    name: "getAllRides",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "string",
            name: "pickup",
            type: "string",
          },
          {
            internalType: "string",
            name: "destination",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "vehicle_no",
                type: "string",
              },
              {
                internalType: "string",
                name: "RC",
                type: "string",
              },
              {
                internalType: "string",
                name: "vehicleImages",
                type: "string",
              },
              {
                internalType: "enum Vehicle.VEHICLE_TYPE",
                name: "vehicleType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "driver",
                type: "address",
              },
            ],
            internalType: "struct Vehicle.VEHICLE_INFO",
            name: "vehicle",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "timestamp",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "noOfPassengers",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isComplete",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isConfirmed",
            type: "bool",
          },
          {
            internalType: "enum Ride.appUser",
            name: "wasCancelledBy",
            type: "uint8",
          },
        ],
        internalType: "struct Ride.RIDE[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rideId",
        type: "uint256",
      },
    ],
    name: "getRide",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "string",
            name: "pickup",
            type: "string",
          },
          {
            internalType: "string",
            name: "destination",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "vehicle_no",
                type: "string",
              },
              {
                internalType: "string",
                name: "RC",
                type: "string",
              },
              {
                internalType: "string",
                name: "vehicleImages",
                type: "string",
              },
              {
                internalType: "enum Vehicle.VEHICLE_TYPE",
                name: "vehicleType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "driver",
                type: "address",
              },
            ],
            internalType: "struct Vehicle.VEHICLE_INFO",
            name: "vehicle",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "timestamp",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "noOfPassengers",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isComplete",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isConfirmed",
            type: "bool",
          },
          {
            internalType: "enum Ride.appUser",
            name: "wasCancelledBy",
            type: "uint8",
          },
        ],
        internalType: "struct Ride.RIDE",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "driver",
        type: "address",
      },
    ],
    name: "getVehicle",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "vehicle_no",
            type: "string",
          },
          {
            internalType: "string",
            name: "RC",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehicleImages",
            type: "string",
          },
          {
            internalType: "enum Vehicle.VEHICLE_TYPE",
            name: "vehicleType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
        ],
        internalType: "struct Vehicle.VEHICLE_INFO",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "driver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "vehicle_no",
            type: "string",
          },
          {
            internalType: "string",
            name: "RC",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehicleImages",
            type: "string",
          },
          {
            internalType: "enum Vehicle.VEHICLE_TYPE",
            name: "vehicleType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
        ],
        internalType: "struct Vehicle.VEHICLE_INFO",
        name: "_vehicle",
        type: "tuple",
      },
    ],
    name: "updateVehicle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612c8880620001146000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637c7b0ff4116100665780637c7b0ff41461010a5780638da5cb5b1461013a578063a93ab10114610158578063afebc00a14610188578063f2fde38b146101b857610093565b806349d883831461009857806364116aa8146100b4578063715018a6146100d05780637aa9d3bb146100da575b600080fd5b6100b260048036038101906100ad919061217c565b6101d4565b005b6100ce60048036038101906100c9919061217c565b610397565b005b6100d861055a565b005b6100f460048036038101906100ef91906121d0565b6105e2565b60405161010191906127f5565b60405180910390f35b610124600480360381019061011f9190612252565b610cd0565b6040516101319190612857565b60405180910390f35b610142611307565b60405161014f91906127da565b60405180910390f35b610172600480360381019061016d9190612153565b611330565b60405161017f9190612879565b60405180910390f35b6101a2600480360381019061019d9190612211565b611698565b6040516101af919061289b565b60405180910390f35b6101d260048036038101906101cd9190612153565b6119af565b005b6101dc611aa7565b73ffffffffffffffffffffffffffffffffffffffff166101fa611307565b73ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790612837565b60405180910390fd5b610258611b73565b81905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906102b7929190611bf0565b5060208201518160010190805190602001906102d4929190611bf0565b5060408201518160020190805190602001906102f1929190611bf0565b5060608201518160030160006101000a81548160ff02191690836003811115610343577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b61039f611aa7565b73ffffffffffffffffffffffffffffffffffffffff166103bd611307565b73ffffffffffffffffffffffffffffffffffffffff1614610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90612837565b60405180910390fd5b61041b611b73565b81905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061047a929190611bf0565b506020820151816001019080519060200190610497929190611bf0565b5060408201518160020190805190602001906104b4929190611bf0565b5060608201518160030160006101000a81548160ff02191690836003811115610506577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b610562611aa7565b73ffffffffffffffffffffffffffffffffffffffff16610580611307565b73ffffffffffffffffffffffffffffffffffffffff16146105d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cd90612837565b60405180910390fd5b6105e06000611aaf565b565b6060806000805b8451811015610cc557600085828151811061062d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060036000828152602001908152602001600020604051806101c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461071c90612a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461074890612a7d565b80156107955780601f1061076a57610100808354040283529160200191610795565b820191906000526020600020905b81548152906001019060200180831161077857829003601f168201915b505050505081526020016004820180546107ae90612a7d565b80601f01602080910402602001604051908101604052809291908181526020018280546107da90612a7d565b80156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b5050505050815260200160058201548152602001600682016040518060a001604052908160008201805461085a90612a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461088690612a7d565b80156108d35780601f106108a8576101008083540402835291602001916108d3565b820191906000526020600020905b8154815290600101906020018083116108b657829003601f168201915b505050505081526020016001820180546108ec90612a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461091890612a7d565b80156109655780601f1061093a57610100808354040283529160200191610965565b820191906000526020600020905b81548152906001019060200180831161094857829003601f168201915b5050505050815260200160028201805461097e90612a7d565b80601f01602080910402602001604051908101604052809291908181526020018280546109aa90612a7d565b80156109f75780601f106109cc576101008083540402835291602001916109f7565b820191906000526020600020905b8154815290600101906020018083116109da57829003601f168201915b505050505081526020016003820160009054906101000a900460ff166003811115610a4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811115610a83577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001600a8201548152602001600b82018054610afb90612a7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2790612a7d565b8015610b745780601f10610b4957610100808354040283529160200191610b74565b820191906000526020600020905b815481529060010190602001808311610b5757829003601f168201915b50505050508152602001600c8201548152602001600d820160009054906101000a900460ff16151515158152602001600d820160019054906101000a900460ff16151515158152602001600d820160029054906101000a900460ff16151515158152602001600d820160039054906101000a900460ff166002811115610c23577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610c5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050848481518110610c98577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508280610cae90612aaf565b935050508080610cbd90612aaf565b9150506105e9565b508192505050919050565b610cd8611c76565b60036000838152602001908152602001600020604051806101c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610dbd90612a7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610de990612a7d565b8015610e365780601f10610e0b57610100808354040283529160200191610e36565b820191906000526020600020905b815481529060010190602001808311610e1957829003601f168201915b50505050508152602001600482018054610e4f90612a7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7b90612a7d565b8015610ec85780601f10610e9d57610100808354040283529160200191610ec8565b820191906000526020600020905b815481529060010190602001808311610eab57829003601f168201915b5050505050815260200160058201548152602001600682016040518060a0016040529081600082018054610efb90612a7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2790612a7d565b8015610f745780601f10610f4957610100808354040283529160200191610f74565b820191906000526020600020905b815481529060010190602001808311610f5757829003601f168201915b50505050508152602001600182018054610f8d90612a7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb990612a7d565b80156110065780601f10610fdb57610100808354040283529160200191611006565b820191906000526020600020905b815481529060010190602001808311610fe957829003601f168201915b5050505050815260200160028201805461101f90612a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461104b90612a7d565b80156110985780601f1061106d57610100808354040283529160200191611098565b820191906000526020600020905b81548152906001019060200180831161107b57829003601f168201915b505050505081526020016003820160009054906101000a900460ff1660038111156110ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811115611124577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001600a8201548152602001600b8201805461119c90612a7d565b80601f01602080910402602001604051908101604052809291908181526020018280546111c890612a7d565b80156112155780601f106111ea57610100808354040283529160200191611215565b820191906000526020600020905b8154815290600101906020018083116111f857829003601f168201915b50505050508152602001600c8201548152602001600d820160009054906101000a900460ff16151515158152602001600d820160019054906101000a900460ff16151515158152602001600d820160029054906101000a900460ff16151515158152602001600d820160039054906101000a900460ff1660028111156112c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156112fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611338611b73565b611340611aa7565b73ffffffffffffffffffffffffffffffffffffffff1661135e611307565b73ffffffffffffffffffffffffffffffffffffffff16146113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90612837565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461140e90612a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461143a90612a7d565b80156114875780601f1061145c57610100808354040283529160200191611487565b820191906000526020600020905b81548152906001019060200180831161146a57829003601f168201915b505050505081526020016001820180546114a090612a7d565b80601f01602080910402602001604051908101604052809291908181526020018280546114cc90612a7d565b80156115195780601f106114ee57610100808354040283529160200191611519565b820191906000526020600020905b8154815290600101906020018083116114fc57829003601f168201915b5050505050815260200160028201805461153290612a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461155e90612a7d565b80156115ab5780601f10611580576101008083540402835291602001916115ab565b820191906000526020600020905b81548152906001019060200180831161158e57829003601f168201915b505050505081526020016003820160009054906101000a900460ff1660038111156115ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811115611637577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6000600260008154809291906116ad90612aaf565b91905055506000829050600254816000018181525050806003600060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301908051906020019061178d929190611bf0565b5060808201518160040190805190602001906117aa929190611bf0565b5060a0820151816005015560c08201518160060160008201518160000190805190602001906117da929190611bf0565b5060208201518160010190805190602001906117f7929190611bf0565b506040820151816002019080519060200190611814929190611bf0565b5060608201518160030160006101000a81548160ff02191690836003811115611866577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060e082015181600a015561010082015181600b0190805190602001906118db929190611bf0565b5061012082015181600c015561014082015181600d0160006101000a81548160ff02191690831515021790555061016082015181600d0160016101000a81548160ff02191690831515021790555061018082015181600d0160026101000a81548160ff0219169083151502179055506101a082015181600d0160036101000a81548160ff0219169083600281111561199c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550905050600254915050919050565b6119b7611aa7565b73ffffffffffffffffffffffffffffffffffffffff166119d5611307565b73ffffffffffffffffffffffffffffffffffffffff1614611a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2290612837565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9290612817565b60405180910390fd5b611aa481611aaf565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060a0016040528060608152602001606081526020016060815260200160006003811115611bcd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054611bfc90612a7d565b90600052602060002090601f016020900481019282611c1e5760008555611c65565b82601f10611c3757805160ff1916838001178555611c65565b82800160010185558215611c65579182015b82811115611c64578251825591602001919060010190611c49565b5b509050611c729190611d55565b5090565b604051806101c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001611ce0611b73565b815260200160008152602001606081526020016000815260200160001515815260200160001515815260200160001515815260200160006002811115611d4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b5b80821115611d6e576000816000905550600101611d56565b5090565b6000611d85611d80846128e7565b6128b6565b90508083825260208201905082856020860282011115611da457600080fd5b60005b85811015611dd45781611dba888261213e565b845260208401935060208301925050600181019050611da7565b5050509392505050565b6000611df1611dec84612913565b6128b6565b905082815260208101848484011115611e0957600080fd5b611e14848285612a3b565b509392505050565b600081359050611e2b81612bed565b92915050565b600082601f830112611e4257600080fd5b8135611e52848260208601611d72565b91505092915050565b600081359050611e6a81612c04565b92915050565b600081359050611e7f81612c1b565b92915050565b600081359050611e9481612c2b565b92915050565b600082601f830112611eab57600080fd5b8135611ebb848260208601611dde565b91505092915050565b60006101c08284031215611ed757600080fd5b611ee26101c06128b6565b90506000611ef28482850161213e565b6000830152506020611f0684828501611e1c565b6020830152506040611f1a84828501611e1c565b604083015250606082013567ffffffffffffffff811115611f3a57600080fd5b611f4684828501611e9a565b606083015250608082013567ffffffffffffffff811115611f6657600080fd5b611f7284828501611e9a565b60808301525060a0611f868482850161213e565b60a08301525060c082013567ffffffffffffffff811115611fa657600080fd5b611fb28482850161206e565b60c08301525060e0611fc68482850161213e565b60e08301525061010082013567ffffffffffffffff811115611fe757600080fd5b611ff384828501611e9a565b610100830152506101206120098482850161213e565b6101208301525061014061201f84828501611e5b565b6101408301525061016061203584828501611e5b565b6101608301525061018061204b84828501611e5b565b610180830152506101a061206184828501611e85565b6101a08301525092915050565b600060a0828403121561208057600080fd5b61208a60a06128b6565b9050600082013567ffffffffffffffff8111156120a657600080fd5b6120b284828501611e9a565b600083015250602082013567ffffffffffffffff8111156120d257600080fd5b6120de84828501611e9a565b602083015250604082013567ffffffffffffffff8111156120fe57600080fd5b61210a84828501611e9a565b604083015250606061211e84828501611e70565b606083015250608061213284828501611e1c565b60808301525092915050565b60008135905061214d81612c3b565b92915050565b60006020828403121561216557600080fd5b600061217384828501611e1c565b91505092915050565b6000806040838503121561218f57600080fd5b600061219d85828601611e1c565b925050602083013567ffffffffffffffff8111156121ba57600080fd5b6121c68582860161206e565b9150509250929050565b6000602082840312156121e257600080fd5b600082013567ffffffffffffffff8111156121fc57600080fd5b61220884828501611e31565b91505092915050565b60006020828403121561222357600080fd5b600082013567ffffffffffffffff81111561223d57600080fd5b61224984828501611ec4565b91505092915050565b60006020828403121561226457600080fd5b60006122728482850161213e565b91505092915050565b6000612287838361242e565b905092915050565b612298816129a9565b82525050565b6122a7816129a9565b82525050565b60006122b882612953565b6122c28185612976565b9350836020820285016122d485612943565b8060005b8581101561231057848403895281516122f1858261227b565b94506122fc83612969565b925060208a019950506001810190506122d8565b50829750879550505050505092915050565b61232b816129bb565b82525050565b61233a81612a17565b82525050565b61234981612a29565b82525050565b600061235a8261295e565b6123648185612987565b9350612374818560208601612a4a565b61237d81612bb4565b840191505092915050565b6000612395602683612998565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006123fb602083612998565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006101c08301600083015161244760008601826127bc565b50602083015161245a602086018261228f565b50604083015161246d604086018261228f565b5060608301518482036060860152612485828261234f565b9150506080830151848203608086015261249f828261234f565b91505060a08301516124b460a08601826127bc565b5060c083015184820360c08601526124cc82826126b4565b91505060e08301516124e160e08601826127bc565b506101008301518482036101008601526124fb828261234f565b9150506101208301516125126101208601826127bc565b50610140830151612527610140860182612322565b5061016083015161253c610160860182612322565b50610180830151612551610180860182612322565b506101a08301516125666101a0860182612340565b508091505092915050565b60006101c08301600083015161258a60008601826127bc565b50602083015161259d602086018261228f565b5060408301516125b0604086018261228f565b50606083015184820360608601526125c8828261234f565b915050608083015184820360808601526125e2828261234f565b91505060a08301516125f760a08601826127bc565b5060c083015184820360c086015261260f82826126b4565b91505060e083015161262460e08601826127bc565b5061010083015184820361010086015261263e828261234f565b9150506101208301516126556101208601826127bc565b5061014083015161266a610140860182612322565b5061016083015161267f610160860182612322565b50610180830151612694610180860182612322565b506101a08301516126a96101a0860182612340565b508091505092915050565b600060a08301600083015184820360008601526126d1828261234f565b915050602083015184820360208601526126eb828261234f565b91505060408301518482036040860152612705828261234f565b915050606083015161271a6060860182612331565b50608083015161272d608086018261228f565b508091505092915050565b600060a0830160008301518482036000860152612755828261234f565b9150506020830151848203602086015261276f828261234f565b91505060408301518482036040860152612789828261234f565b915050606083015161279e6060860182612331565b5060808301516127b1608086018261228f565b508091505092915050565b6127c581612a0d565b82525050565b6127d481612a0d565b82525050565b60006020820190506127ef600083018461229e565b92915050565b6000602082019050818103600083015261280f81846122ad565b905092915050565b6000602082019050818103600083015261283081612388565b9050919050565b60006020820190508181036000830152612850816123ee565b9050919050565b600060208201905081810360008301526128718184612571565b905092915050565b600060208201905081810360008301526128938184612738565b905092915050565b60006020820190506128b060008301846127cb565b92915050565b6000604051905081810181811067ffffffffffffffff821117156128dd576128dc612b85565b5b8060405250919050565b600067ffffffffffffffff82111561290257612901612b85565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561292e5761292d612b85565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006129b4826129ed565b9050919050565b60008115159050919050565b60008190506129d582612bc5565b919050565b60008190506129e882612bd9565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612a22826129c7565b9050919050565b6000612a34826129da565b9050919050565b82818337600083830152505050565b60005b83811015612a68578082015181840152602081019050612a4d565b83811115612a77576000848401525b50505050565b60006002820490506001821680612a9557607f821691505b60208210811415612aa957612aa8612b56565b5b50919050565b6000612aba82612a0d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612aed57612aec612af8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60048110612bd657612bd5612b27565b5b50565b60038110612bea57612be9612b27565b5b50565b612bf6816129a9565b8114612c0157600080fd5b50565b612c0d816129bb565b8114612c1857600080fd5b50565b60048110612c2857600080fd5b50565b60038110612c3857600080fd5b50565b612c4481612a0d565b8114612c4f57600080fd5b5056fea2646970667358221220630f9b55a40026e0bdc9e43a46ca96ad3eabff5af402dea62c38fbae5061cde064736f6c63430008000033";

type RideConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RideConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ride__factory extends ContractFactory {
  constructor(...args: RideConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ride> {
    return super.deploy(overrides || {}) as Promise<Ride>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ride {
    return super.attach(address) as Ride;
  }
  connect(signer: Signer): Ride__factory {
    return super.connect(signer) as Ride__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RideInterface {
    return new utils.Interface(_abi) as RideInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ride {
    return new Contract(address, _abi, signerOrProvider) as Ride;
  }
}
